{"name":"spells","tagline":"This is a small scala \"util\" library, which will hopefully grow over time.","body":"[Java 8]:         http://java.com/en/download/index.jsp\r\n[SBT 0.13.9]:     http://www.scala-sbt.org/\r\n\r\n[Ansi]:           https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/user/AnsiTests.scala\r\n[AnyOps]:         https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/user/AnyOpsTests.scala\r\n[ClearPrint]:     https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/user/ClearPrintTests.scala\r\n[Clipboard]:      https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/user/ClipboardTests.scala\r\n[ErrorPrint]:     https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/user/ErrorPrintTests.scala\r\n[HumanRendering]: https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/user/HumanRenderingTests.scala\r\n[Misc]:           https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/user/MiscTests.scala\r\n[StringOps]:      https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/user/StringOpsTests.scala\r\n[StylePrint]:     https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/user/StylePrintTests.scala\r\n[Xray]:           https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/user/XrayTests.scala\r\n\r\n\r\n[![Join the chat at https://gitter.im/agilesteel/spells](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/agilesteel/spells?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n[![Stories in Ready](https://badge.waffle.io/agilesteel/spells.png?label=ready&title=Ready)](https://waffle.io/agilesteel/spells)\r\n\r\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.agilesteel/spells_2.11/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.agilesteel/spells_2.11)\r\n[![License](http://img.shields.io/:license-Apache%202-brightgreen.svg)](http://www.apache.org/licenses/LICENSE-2.0.txt)\r\n[![Build Status](https://travis-ci.org/agilesteel/spells.svg?branch=master)](https://travis-ci.org/agilesteel/spells)\r\n[![Codacy Badge](https://api.codacy.com/project/badge/grade/aeb5e73b4a0e4ad98888505a544f3e7c)](https://www.codacy.com/app/agilesteel/spells)\r\n[![Coverage Status](https://img.shields.io/coveralls/agilesteel/spells.svg)](https://coveralls.io/r/agilesteel/spells)\r\n\r\n\r\n## Features:\r\n\r\n* [Ansi] - Ansi styled outputs for your strings\r\n* [AnyOps] - Additional operations on `Any`\r\n* [ClearPrint] - clearPrintln (let's you stay on the same line)\r\n* [Clipboard] - Clipboard.writeString and Clipboard.readString\r\n* [ErrorPrint] - printerr (eases styling of errors)\r\n* [HumanRendering] - rendering for things like duration\r\n* [Misc] - noop\r\n* [StringOps] - Additional operations on `String`\r\n* [StylePrint] - println on steroids\r\n* [Xray] - call .xray on any expression to see what's inside of it ;)\r\n\r\n## Usage\r\n\r\n### Requirements\r\n\r\n* [Java 8] or greater\r\n* [SBT 0.13.9] or greater if you want to build from source\r\n\r\n### Configuring your project's dependencies\r\n\r\nReleases: add these lines to your SBT build file:\r\n```scala\r\nresolvers += Resolver.sonatypeRepo(\"releases\") // optional, but quicker\r\n\r\nlibraryDependencies += \"com.github.agilesteel\" %% \"spells\" % \"1.6.1\"\r\n```\r\n\r\nSnapshots: add these lines to your SBT build file:\r\n```scala\r\nresolvers += Resolver.sonatypeRepo(\"snapshots\")\r\n\r\nlibraryDependencies += \"com.github.agilesteel\" %% \"spells\" % \"2.0.0-SNAPSHOT\"\r\n```\r\n### Help\r\nIf you clone this repository, SBT will guide you through the man pages!\r\n\r\n### Examples\r\n```scala\r\npackage company.project\r\n\r\npackage object util extends spells.SpellsModule\r\n\r\nimport company.project.util._\r\n\r\nobject Ansi extends App {\r\n   println(\"white\")\r\n   println(\"green\")(Green)\r\n   println(\"green\".green)\r\n   println(1337.cyan)\r\n   println(\"magenta\".magenta)(Green)\r\n   println(\"yellow\".yellow + \"green\".green + \"yellow\".yellow)(Yellow)\r\n   println(\"yellow\" + \"green\".green)(Yellow)\r\n   println(\"yellow\".yellow + \"green\")(Green)\r\n   println(\"yellow\" + \"green\".green + \"yellow\")(Yellow)\r\n   println(\"yellow\".yellow + \"green\" + \"yellow\".yellow)(Green)\r\n   println(\"yellow\" + \"green\".green + \"yellow\".yellow)(Yellow)\r\n   println(\"yellow\".yellow + \"green\".green + \"yellow\")(Yellow)\r\n}\r\n\r\nobject UsingCustomStyles extends App {\r\n   val customStyle = \"someStyle\".toAnsiStyle\r\n   println(\"styled\" in customStyle)\r\n}\r\n\r\nobject OverridingDefaultStyle extends App {\r\n   implicit val defaultStyle = Yellow\r\n   println(\"yellow\" + \"red\".red + \"yellow\" + \"green\".green + \"yellow\")\r\n}\r\n\r\nobject OverridingDefaultStyleWithCustomStyle extends App {\r\n   implicit val defaultStyle = \"someStyle\".toAnsiStyle\r\n   println(\"styled\")\r\n}\r\n```\r\n","google":"UA-54135241-1","note":"Don't delete this file! It's used internally to help with page regeneration."}
{"name":"spells","tagline":"This is a small scala \"util\" library, which will hopefully grow over time.","body":"[Java 1.6]:   http://java.com/en/download/index.jsp\r\n[SBT 0.13.5]: http://www.scala-sbt.org/\r\n\r\n[Ansi]:       https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/AnsiTests.scala\r\n[StylePrint]: https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/StylePrintTests.scala\r\n[ErrorPrint]: https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/ErrorPrintTests.scala\r\n[ClearPrint]: https://github.com/agilesteel/spells/blob/master/src/test/scala/spells/ClearPrintTests.scala\r\n\r\n[![Build Status](https://travis-ci.org/agilesteel/spells.svg?branch=master)](https://travis-ci.org/agilesteel/spells)\r\n\r\n## Features:\r\n\r\n* [Ansi] - Ansi styled outputs for your strings\r\n* [StylePrint] - println on steroids\r\n* [ErrorPrint] - printerr (eases styling of errors)\r\n* [ClearPrint] - clearPrintln (let's you stay on the same line)\r\n\r\n## Usage\r\n\r\n### Requirements\r\n\r\n* [Java 1.6] or greater\r\n* [SBT 0.13.5] or greater if you want to build from source\r\n\r\n### Configuring your project's dependencies\r\n\r\nReleases: add these lines to your SBT build file:\r\n```scala\r\nresolvers += Resolver.sonatypeRepo(\"releases\") // optional, but quicker\r\n\r\nlibraryDependencies += \"com.github.agilesteel\" %% \"spells\" % \"1.5.1\"\r\n```\r\n\r\nSnapshots: add these lines to your SBT build file:\r\n```scala\r\nresolvers += Resolver.sonatypeRepo(\"snapshots\")\r\n\r\nlibraryDependencies += \"com.github.agilesteel\" %% \"spells\" % \"1.6.0-SNAPSHOT\"\r\n```\r\n### Help\r\nIf you clone this repository, SBT will guide you through the man pages!\r\n\r\n### Examples\r\n```scala\r\npackage myproject\r\n\r\nimport spells._\r\n\r\nobject Ansi extends App {\r\n   println(\"white\")\r\n   println(\"green\")(Green)\r\n   println(\"green\".green)\r\n   println(1337.cyan)\r\n   println(\"magenta\".magenta)(Green)\r\n   println(\"yellow\".yellow + \"green\".green + \"yellow\".yellow)(Yellow)\r\n   println(\"yellow\" + \"green\".green)(Yellow)\r\n   println(\"yellow\".yellow + \"green\")(Green)\r\n   println(\"yellow\" + \"green\".green + \"yellow\")(Yellow)\r\n   println(\"yellow\".yellow + \"green\" + \"yellow\".yellow)(Green)\r\n   println(\"yellow\" + \"green\".green + \"yellow\".yellow)(Yellow)\r\n   println(\"yellow\".yellow + \"green\".green + \"yellow\")(Yellow)\r\n}\r\n\r\nobject UsingCustomStyles extends App {\r\n   val customStyle = \"someStyle\".toAnsiStyle\r\n   println(\"styled\" in customStyle)\r\n}\r\n\r\nobject OverridingDefaultStyle extends App {\r\n   implicit val defaultStyle = Yellow\r\n   println(\"yellow\" + \"red\".red + \"yellow\" + \"green\".green + \"yellow\")\r\n}\r\n\r\nobject OverridingDefaultStyleWithCustomStyle extends App {\r\n   implicit val defaultStyle = \"someStyle\".toAnsiStyle\r\n   println(\"styled\")\r\n}\r\n```\r\n","google":"UA-54135241-1","note":"Don't delete this file! It's used internally to help with page regeneration."}